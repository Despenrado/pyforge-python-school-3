version: '3.8'
services:
  db:
    image: postgres:16.1
#    build:
#      context: ..
#      dockerfile: ./deployment/Dockerfile.db
#    ports:
#      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data


  redis:
    image: "redis:alpine"
    container_name: redis_cache
    volumes:
      - ./redis_data:/data

  app1:
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
#    ports:
#      - "${APP_PORT}:8080"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: ${DB_PORT}
      DB_HOST: db
      INSTANCE_NAME: app-1
    depends_on:
      - db
      - redis

  app2:
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
#    ports:
#      - "${APP_PORT}:8080"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: ${DB_PORT}
      DB_HOST: db
      INSTANCE_NAME: app-2
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:latest
    ports:
      - "8081:8081"
    volumes:
      - ../nginx:/etc/nginx/conf.d
    depends_on:
      - app1
      - app2

volumes:
  postgres_data:
